echo "---> .bashrc"

# old school cool
set -o vi
export EDITOR=$(which vim)

export HISTSIZE=1000
export HISTFILESIZE=1000
export HISTCONTROL=ignoreboth:erasedups

alias g='git'
alias init-git='git init && git commit --allow-empty --message "First!" && git tag first'

alias ls='ls -F'
alias ll='ls -lh'
alias lla='ls -Alh'
alias cls='clear'
alias cask='brew cask'
alias gradle=gw
alias mw='./mvnw'
alias glow='glow -s dark'

alias dinopass='curl -sSL https://www.dinopass.com/password/simple'

alias learn-db='psql -h ec2-3-228-132-140.compute-1.amazonaws.com dd0pnf3k352usu Perry-Read-Only'
alias learn-api='curl -sSL --header "Authorization: Bearer $LEARN_API_TOKEN"'
alias glearn=glearn-cli

alias hist='history | tail'

alias dkr='docker'
alias dkrcmp='docker-compose'
cleanup-docker-repos ()
{
    local repo_name=${1:?exact repository name required};
    local images="$(docker images -q $repo_name | sort -u)";
    [[ -z "$images" ]] || docker rmi $images -f
}
cleanup-docker-containers () {
    local containers="$(docker ps -qa --no-trunc --filter status=exited)"
    [[ -z "$containers" ]] || docker rm $containers
}
cleanup-docker-images () {
    local images="$(docker images --filter dangling=true -q --no-trunc)"
    [[ -z "$images" ]] || docker rmi $images
    images="$(docker images | awk '/none/ { print $3 }')"
    [[ -z "$images" ]] || docker rmi $images
}
docker-id-for () {
    docker ps | awk -v pattern="$1" '$0 ~ pattern {print $1}'
}

alias block-team-sync='docker run --rm -v "${PWD}":/block -e GITHUB_OAUTH_TOKEN=${GITHUB_OAUTH_TOKEN} -it block-team-sync /block/repos.yml'

[ -f /usr/local/etc/bash_completion ] && . /usr/local/etc/bash_completion
complete -o bashdefault -o default -o nospace -F __git_wrap__git_main g

export JAVA_HOME=$(/usr/libexec/java_home)
#export JAVA_HOME=$(sdk home java 11)

random-string () {
    LC_CTYPE=C tr -dc A-Za-z0-9 < /dev/urandom | head -c ${1:-16}
}

# enable brew command autocompletion
if type brew 2&>/dev/null; then
  for completion_file in "$(brew --prefix)/etc/bash_completion.d/*"; do
    source "$completion_file"
  done
fi

[ -f ~/.secrets ] && . ~/.secrets

export GOPATH=${HOME}/go
export PATH=${GOPATH}/bin:${PATH}

export LEARN_BASE_URL_STAGE="https://galvanize-forge-staging.herokuapp.com/"
export LEARN_BASE_URL_PROD="https://learn-2.galvanize.com/"

alias devenv='$HOME/projects/autodesk/aws-devops-lessons/__docker-devenv/run.sh'

#function iterm2_print_user_vars () {
#  iterm2_set_user_var gitBranch $(git rev-parse --abbrev-ref HEAD)
#}

eval "$(rbenv init -)"
