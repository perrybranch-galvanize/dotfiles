# ~/.bashrc: executed by bash(1) for non-login shells.

echo "==> .bashrc"

# If not running interactively, don't do anything
[ -z "$PS1" ] && return

set -o vi

# don't put duplicate lines in the history. See bash(1) for more options
# don't overwrite GNU Midnight Commander's setting of `ignorespace'.
HISTCONTROL=$HISTCONTROL${HISTCONTROL+:}ignoredups

# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# fancy prompt (w/ git info)
[ ! -f ~/.bash_prompt ] || . ~/.bash_prompt

# enable programmable completion features
if [ -f ~/bash_completion ] && ! shopt -oq posix; then
    . ~/bash_completion
fi
complete -o bashdefault -o default -o nospace -F __git_wrap__git_main g

# Where should this go?
export MAVEN_OPTS="-Xmx512m -XX:MaxPermSize=256m"

# Autosave VIM buffers before executing a terminal command
[ ! -f ~/.vim/bundle/tmux-config/tmux-autowrite/autowrite-vim.sh ] || . ~/.vim/bundle/tmux-config/tmux-autowrite/autowrite-vim.sh

[ ! -f ~/.extra ] || . ~/.extra

[ ! -f ~/.aliases ] || . ~/.aliases

[ ! -f ~/.git_aliases ] || . ~/.git_aliases

[ ! -f ~/.tmux_aliases ] || . ~/.tmux_aliases

[ ! -f ~/.local_aliases ] || . ~/.local_aliases

[ ! -f ~/.project_aliases ] || . ~/.project_aliases

# vvvvv to be organized and documented vvvvv

cleanup-docker-repos ()
{
    local repo_name=${1:?exact repository name required};
    local images="$(docker images -q $repo_name | sort -u)";
    [[ -z "$images" ]] || docker rmi $images -f
}
cleanup-docker-containers () {
    local containers="$(docker ps -qa --no-trunc --filter status=exited)"
    [[ -z "$containers" ]] || docker rm $containers
}
cleanup-docker-images () {
    local images="$(docker images --filter dangling=true -q --no-trunc)"
    [[ -z "$images" ]] || docker rmi $images
    images="$(docker images | awk '/none/ { print $3 }')"
    [[ -z "$images" ]] || docker rmi $images
}
docker-id-for () {
    docker ps | awk -v pattern="$1" '$0 ~ pattern {print $1}'
}

alias learn-db='psql -h ec2-3-228-132-140.compute-1.amazonaws.com dd0pnf3k352usu Perry-Read-Only'
alias learn-api='curl -sSL --header "Authorization: Bearer $LEARN_API_TOKEN"'
alias glearn=glearn-cli

alias dinopass='curl -sSL https://www.dinopass.com/password/simple'
alias init-git='git init && git commit --allow-empty --message "First!" && git tag first'

[ -f ~/.fzf.bash ] && source ~/.fzf.bash
